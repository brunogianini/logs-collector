name: CI/CD com coleta de logs via API

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Step 1
        run: |
          echo "Iniciando build..."
          echo "Simulando erro no build"
          exit 1  # simula falha

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test Step 1
        run: |
          echo "Rodando testes..."
          echo "Tudo OK!"

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Lint Step
        run: |
          echo "Rodando lint..."
          exit 1  # simula falha

  collect-logs:
    runs-on: ubuntu-latest
    needs: [build, test, lint]
    if: failure()
    steps:
      - name: Coletar logs completos dos jobs falhos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          echo ${{ github.repository }}
          echo ${{ github.run_id }}

          echo "Buscando logs na url https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs"

          JOBS_JSON=$(curl -sSL \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs")

           FAILED_JOBS=$(echo "$JOBS_JSON" | jq -r '.jobs[] | select(.conclusion=="failure") | .id')

          if [ -z "$FAILED_JOBS" ]; then
            echo "✅ Nenhum job falhou, nada para mostrar."
            exit 0
          fi

          echo "🧾 Jobs falhos encontrados: $FAILED_JOBS"

          for JOB_ID in $FAILED_JOBS; do
            JOB_NAME=$(echo "$JOBS_JSON" | jq -r ".jobs[] | select(.id==$JOB_ID) | .name")
            echo
            echo "═══════════════════════════════════════════════"
            echo "💥 JOB: $JOB_NAME"
            echo "───────────────────────────────────────────────"

            # Percorre steps do job falho corretamente
            echo "$JOBS_JSON" | jq -c ".jobs[] | select(.id==$JOB_ID) | .steps[]" | while read -r STEP; do
              STEP_CONCLUSION=$(echo "$STEP" | jq -r ".conclusion")
              STEP_NAME=$(echo "$STEP" | jq -r ".name")
              STEP_LOG_URL=$(echo "$STEP" | jq -r ".log_url")

              if [ "$STEP_CONCLUSION" == "failure" ]; then
                echo
                echo "📜 STEP FALHOU: $STEP_NAME"
                echo "───────────────────────────────────────────────"

                # Baixar log completo do step diretamente
                curl -sSL -H "Authorization: Bearer $GH_TOKEN" "$STEP_LOG_URL"
              fi
            done
          done

          echo
          echo "═══════════════════════════════════════════════"
          echo "🏁 Fim dos logs completos dos jobs falhos"

          
          
