name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          echo "Compilando..."
          exit 1  # Simula erro

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run tests
        run: echo "Rodando testes..."

  collect-logs:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: ${{ failure() }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl tar

      - name: Fetch and print failed job logs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          echo "Buscando jobs que falharam..."
          # Lista todos os jobs da workflow
          jobs_json=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/jobs")

          # Para cada job que falhou
          echo "$jobs_json" | jq -r '.jobs[] | select(.conclusion=="failure") | .id as $id | .name as $name | "\($id) \($name)"' \
          | while read job_id job_name; do
              echo ""
              echo "===== Logs do job: $job_name ====="
              
              # Baixa o log do job
              curl -s -L -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/$REPO/actions/jobs/$job_id/logs" \
                -o logs.tar.gz

              # Extrai os logs e imprime apenas os steps que falharam
              mkdir -p logs_$job_id
              tar -xzf logs.tar.gz -C logs_$job_id

              # Os arquivos .txt correspondem a cada step
              for step_log in logs_$job_id/*.txt; do
                  # Procura por erro no step
                  if grep -q -i "error" "$step_log"; then
                      echo "---- Step com erro: $(basename $step_log) ----"
                      cat "$step_log"
                      echo ""
                  fi
              done
            done
