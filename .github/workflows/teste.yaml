name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          echo "Compilando..."
          exit 1  # Simula erro

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: |
          echo "Rodando testes..."
          exit 1  # Simula erro

  collect-logs:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: ${{ failure() }}
    steps:
      - name: Fetch failed job steps from API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          echo "Buscando jobs que falharam..."
  
          # Busca todos os jobs da run
          jobs_failed=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${REPO}/actions/runs/${RUN_ID}/jobs")
  
          # Extrai os IDs dos jobs que falharam
          jobs_failed_ids=$(echo "$jobs_failed" | jq -r '.jobs[] | select(.conclusion=="failure") | .id')
  
          echo "IDs dos jobs com falha:"
          echo "$jobs_failed_ids"
  
          # Itera sobre cada job_id e busca os logs
          for job_id in $jobs_failed_ids; do
            echo "Buscando logs do job $job_id..."
            curl -L \
              -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/${{ github.repository }}/actions/jobs/$jobs_failed_id/logs" \
              -o "job_${job_id}_logs.zip"
            echo "Logs do job $job_id salvos em job_${job_id}_logs.zip"
          done
